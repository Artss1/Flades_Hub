--â™¥localsâ™¥
	local S = {
		Players = game:GetService("Players"),
		RS = game:GetService("ReplicatedStorage"),
		RSs = game:GetService("RunService"),
		w = game:GetService("Workspace"),
		r = game:GetService("RunService"),
		d = game:GetService("Debris"),
		HS = game:GetService("HttpService"),
		UIS = game:GetService("UserInputService"),
		StarterGui = game:GetService("StarterGui")}

	local me = S.Players.LocalPlayer; local pccontrol = me.PlayerGui.ControlsGui.PCFrame

	local O = {
		Events = {
			saymsg = S.RS.DefaultChatSystemChatEvents.SayMessageRequest,
			getmsg = S.RS.DefaultChatSystemChatEvents.OnMessageDoneFiltering,
			DestroyToyEvent = S.RS.MenuToys.DestroyToy,
			SetLineColorEvent = S.RS.DataEvents.UpdateLineColorsEvent,
			ExtendLineEvent = S.RS.GrabEvents.ExtendGrabLine,
			CreateGrabEvent = S.RS.GrabEvents.CreateGrabLine,
			StruggleEvent = S.RS.CharacterEvents.Struggle,
			StickyPartEvent = S.RS.PlayerEvents.StickyPartEvent,
			BombEvent = S.RS.BombEvents.BombExplode,
			DestroyGrabLineEvent = S.RS.GrabEvents.DestroyGrabLine,
			SetNetworkOwnerEvent = S.RS.GrabEvents.SetNetworkOwner,
			Ragdoll = S.RS.CharacterEvents.RagdollRemote,
			SpawnToyEvent = S.RS.MenuToys.SpawnToyRemoteFunction},

		me = S.Players.LocalPlayer,
		myname = me.Name,
		mouse = me:GetMouse(),
		BeingHeld = me.IsHeld,
		pccontrol = me.PlayerGui.ControlsGui.PCFrame,
		pccontroltoy = pccontrol.ToyMenu,
		backpack = S.w[me.Name.."SpawnedInToys"],
		m = S.w.Map,
		SL = S.w.SpawnLocation,
		stoys = nil,
		pcld = nil,
		backpacks = nil,
		chars = nil,
		hls = nil,
		ccc = S.w.Camera:FindFirstChild("ColorCorrection"),
		sunrays = nil}

	local N = {
		V = {
			mhv3 = Vector3.new(math.huge, math.huge, math.huge),
			nv3 = Vector3.new(0, 0, 0)},

		C1 = {
			Color3.fromRGB(0,0,0),
			Color3.fromRGB(0,255,0),
			Color3.fromRGB(255,255,0),
			Color3.fromRGB(255,0,0)},

		C2 = {
			Color3.fromRGB(0, 255, 255),
			Color3.fromRGB(0,255,0),
			Color3.fromRGB(127,255,0),
			Color3.fromRGB(255,255,0),
			Color3.fromRGB(255,127,0),
			Color3.fromRGB(255,0,0)},

		distallaura = 24,
		gettimefunc = 0,
		xrta = 0,
		expldelay = 0,
		yrta = 0,
		zrta = 0,
		chal = 0,
		cdyat = 0,
		zoombindv = 0,
		chamsot = 0,
		chamsft = 0,
		RawStep2 = 0,
		step2 = 0,
		hpa = 0,
		dpa = 0,
		cpan = 0,
		cpa = 0,
		hta = 0,
		dta = 0,
		RawStep = 0,
		step = 0,
		cat = 0,
		zgv = 0,
		ks = 10,
		last_UTP = 0,
		strength = 0,
		Lag_Intensity = 0,
		kickcountc = 0,
		wss = 0,
		jps = 0,
		gs = 0,
		linecolorscount = 0,
		debug = 4}

	local L = {
		publicds = false,
		spyenabled = false,
		public = false,
		zoombind = false,
		gluegrab = false,
		controltrain = false,
		hidealltoys = false,
		shadowalltoys = false,
		storeallplayerstoys = false,
		vhsows = true,
		debug = false,
		smptmt = false,
		tptoyfs = false,
		spyallplrinfo = true,
		paitd = false}


	local P = {
		gkblob = nil,
		who = nil,
		lplr = nil,
		rplr = nil,
		whll = nil,
		last_toy = nil,
		last_model = nil,
		last_chto = nil,
		last_chto2 = nil,
		spat = nil,
		tptoypos = CFrame.new(363.534424, -7.35040426, 527.307678, 0.425311029, 3.02851468e-08, -0.905047238, 8.34827762e-09, 1, 3.73856288e-08, 0.905047238, -2.34561064e-08, 0.425311029)}

	local Lt = {
		toys = {
			BombMissile = {"HitboxBodyTop", "PartHitDetector"},
			BombDarkMatter = {"PartHitDetector","Spinner"},
			BallSnowball = {"SoundPart"}},

		gps = {
			BombMissile = "HitboxBodyTop",
			BombDarkMatter = "Spinner",
			BallSnowball = "SoundPart"},

		admins = {959216740, 5516434780, 2311784954, 6192858983, 7427155484},
		lat = {},
		hui = {},
		hui2 = {},
		ggl = {},
		ccolors = {},
		privateProperties = {
			Color = Color3.fromRGB(255,0,0),
			Font = Enum.Font.SourceSansBold,
			TextSize = 18},
		last_urls = {},
		spylist = {},
		sspylist = {},
		ftapcolors = {
			Coins = Color3.fromRGB(66, 66, 66),
			TabBar = Color3.fromRGB(66, 66, 66),
			Settings = Color3.fromRGB(66, 66, 66),
			Shop = Color3.fromRGB(66, 66, 66),
			ToyDestroy = Color3.fromRGB(66, 66, 66),
			ToysShop = Color3.fromRGB(66, 66, 66),
			Toys = Color3.fromRGB(66, 66, 66),
			SettingsContents = Color3.fromRGB(90, 90, 90),
			SettingsTitle = Color3.fromRGB(66, 66, 66),
			ShopTitle = Color3.fromRGB(66, 66, 66),
			ShopContents = Color3.fromRGB(90, 90, 90),
			ToysContents = Color3.fromRGB(90, 90, 90),
			FavoritesFrame = Color3.fromRGB(120, 120, 120),
			Favorites = Color3.fromRGB(66, 66, 66),
			MeterFrame = Color3.fromRGB(120, 120, 120),
			SortingTabs = Color3.fromRGB(120, 120, 120),
			ToysTitle = Color3.fromRGB(66, 66, 66),
			DestroyTitle = Color3.fromRGB(66, 66, 66),
			DestroyContents = Color3.fromRGB(90, 90, 90),
			DestroyMeterFrame = Color3.fromRGB(120, 120, 120),
			ToyShopTitle = Color3.fromRGB(66, 66, 66),
			ToyShopSortingTabs = Color3.fromRGB(120, 120, 120),
			ToyShopContents = Color3.fromRGB(90, 90, 90)}}
	
			local Ld = {
				field = function() print("Field function placeholder") end, 
				ppl = {}, 
				bpl = {}, 
				bplid = {},
				bpltag = {}, 
				ldsp = {}, 
				ldsb = {}, 
				ldsbip = {}, 
				lastb = {},
				lastc = {}, 
				lastd = {}  
			}
			
			
	
	local instance = (_G.chatSpyInstance or 0) + 1
	_G.chatSpyInstance = instance
	local chamsfc = Color3.fromRGB(255,255,255)
	local chamsoc = Color3.fromRGB(0,0,0)
	local function set_chams_parametr() end
	local function check_prem() end
	local a = 0
	local debugL1
	local chatFrame = O.me.PlayerGui.Chat.Frame
	me, pccontrol, ldsp, ldsb, ldsbip = nil, nil, nil, nil, nil

--â™¥setingsâ™¥
	typingAnimation = Instance.new("Animation")
	typingAnimation.AnimationId = "rbxassetid://18353618958"
	typingAnimator = O.me.Character:WaitForChild("Humanoid"):WaitForChild("Animator")
	typingTrack = typingAnimator:LoadAnimation(typingAnimation)

	crouchAnimation = Instance.new("Animation")
	crouchAnimation.AnimationId = "rbxassetid://6980229055"
	crouchAnimator = O.me.Character:WaitForChild("Humanoid"):WaitForChild("Animator")
	crouchTrack = crouchAnimator:LoadAnimation(crouchAnimation)

	throwedAnimation = Instance.new("Animation")
	throwedAnimation.AnimationId = "rbxassetid://7047322890"
	throwedAnimator = O.me.Character:WaitForChild("Humanoid"):WaitForChild("Animator")
	throwedTrack = throwedAnimator:LoadAnimation(throwedAnimation)


	O.sunrays = Instance.new("SunRaysEffect", game.Lighting)
	O.sunrays.Intensity = 0
	O.sunrays.Spread = 0

	O.bloomeffect = Instance.new("BloomEffect", game.Lighting)
	O.bloomeffect.Intensity = 0
	O.bloomeffect.Size = 0
	O.bloomeffect.Threshold = 0

	O.ccc = Instance.new("ColorCorrectionEffect", S.w.Camera)
	O.ccc.Enabled = false

	O.hls = Instance.new("Folder", S.w)
	O.hls.Name = _G.heart.."hls".._G.heart

	O.chars = Instance.new("Folder", S.w)
	O.chars.Name = _G.heart.."chars".._G.heart

	O.backpacks = Instance.new("Folder", S.w)
	O.backpacks.Name = _G.heart.."backpacks".._G.heart

	O.pcld = Instance.new("Folder", S.w)
	O.pcld.Name = _G.heart.."pcld".._G.heart

	O.stoys = Instance.new("Folder", S.w)
	O.stoys.Name = _G.heart.."stoys".._G.heart

	chatFrame.ChatChannelParentFrame.Visible = true
	chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
	
	pst = true


	local function if3(a1, a2, a3, b1, b2, b3)
		local t = false
		local l = ""; for _,ll in pairs(a1) do l=l..ll end; a1 = l
		local l = ""; for _,ll in pairs(a2) do l=l..ll end; a2 = l
		local l = ""; for _,ll in pairs(a3) do l=l..ll end; a3 = l
		local l = ""; for _,ll in pairs(b1) do l=l..ll end; b1 = l
		local l = ""; for _,ll in pairs(b2) do l=l..ll end; b2 = l
		local l = ""; for _,ll in pairs(b3) do l=l..ll end; b3 = l
		if if3_help(a1, b2, b3) or a1 ~= b1 then t = true
		elseif if3_help(a2, b1, b3) or a2 ~= b2 then t = true
		elseif if3_help(a3, b1, b2) or a3 ~= b3 then t = true end
		return t
	end



--â™¥funcâ™¥
	local function auto_invis_touch() end
	local function After_AG() end
	local function set_hl() end
	local function get_all12() end
	local function get_plr() end
	local function get_rank() end
	--â™¥notifysâ™¥
		local function fstatus(text)
			Ld.field:Notify({
				Title = "Function Status",
				Content = text,
				Duration = 5,
				Image = 4483362458
			})
		end

		local function dnotify(text, n)
			if L.debug and N.debug == n then
				Ld.field:Notify({
					Title = "Debug",
					Content = text,
					Duration = 5,	
					Image = 4483362458
				})
			end
		end

		local function notify(text)
			Ld.field:Notify({
				Title = "Notify",
				Content = text,
				Duration = 5,	
				Image = 4483362458
			})
		end

		local function notify2(text1, text2)
			Ld.field:Notify({
				Title = text1,
				Content = text2,
				Duration = 5,	
				Image = 4483362458
			})
		end

	--â™¥bestâ™¥
		--â™¥mathâ™¥
			local function magnitude(prt, prt1) return (prt.Position - prt1.Position).Magnitude end
			local function PackColor(Color) return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255} end
			local function UnpackColor(Color) return Color3.fromRGB(Color.R, Color.G, Color.B) end

		--â™¥checksâ™¥
			local function check_list(list, find) for _,v in pairs(list) do if v == find then return v end end end
			local function check_limbs(prt) return check_list({"Head","Right Arm","Right Leg","Left Arm","Left Leg","Torso","HumanoidRootPart"}, prt.Name) end
			local function check_hum(hum) if hum and hum.Health ~= 0 and hum:GetState() ~= Enum.HumanoidStateType.Dead then return true end end
			local function check_spy(nk) local t = false; t = check_list(Lt.spylist, nk); t = check_list(Lt.sspylist, nk); return t end
			local function check_whll(nk) return not(check_list(P.whll, nk)) end
			local function check_mag1(prt, prt1) if magnitude(prt, prt1) < 25 then return true end end
			local function check_mag2(prt, prt1) if magnitude(prt, prt1) > 25 then return true end end
			local function check_admin(id) return check_list(Lt.admins, id) end
			local function check_plr(obj, t) local hrp, hum, hd, hrp1, hum1, hd1 = get_all12(obj) 
				if hrp and hum and check_hum(hum) and hd and hrp1 and hum1 and check_hum(hum1) and hd1 and not(get_plr(obj).InPlot.Value) then
					if t then t = check_mag1(hrp, hrp1) else t = true end; if t then return hrp, hum, hd, hrp1, hum1, hd1 end end end
			local function check_rank(plr) if get_rank(O.me) > get_rank(plr) then return true end end
			

		--â™¥getsâ™¥
			local function get_time() if N.gettimefunc ~= 0 then print(os.clock() - N.gettimefunc); N.gettimefunc = 0 else N.gettimefunc = os.clock() end end
			local function get_end(list) local endd; for _,v in pairs(list) do endd = v end; return endd end
			local function get_endi(list) local enddi; for i,_ in pairs(list) do enddi = i end; return enddi end
			local function get_rotate(list) local rot = {}; local is = get_endi(list); for i,v in pairs(list) do rot[is-i+1] = v end; return rot end
			local function get_parents(obj) local p = obj; local tree = {obj} while p ~= game do p = p.Parent; table.insert(tree, p) end; return tree end
			local function get_child(obj, tree) local last = obj; for _,obj in ipairs(tree) do if last:FindFirstChild(obj) then last = last[obj] end end return last end
			local function get_char(obj) if obj then for _,plr in ipairs(S.Players:GetPlayers()) do local pf; if obj == plr then return plr.Character end; if plr.Character then pf = check_list(get_parents(obj), plr.Character) end; if pf then return pf end end end end
			function get_plr(obj) local char = get_char(obj); for _,plr in ipairs(S.Players:GetPlayers()) do if plr.Character and plr.Character == char then return plr end end end
			local function get_char_child(obj, obj1) local char = get_char(obj); if char and char:FindFirstChild(obj1) then return char[obj1] end end
			local function get_mychar_child(obj) local char = O.me.Character; if char and char:FindFirstChild(obj) then return char[obj] end end
			local function get_hrp() return get_mychar_child("HumanoidRootPart") end
			local function get_hum() return get_mychar_child("Humanoid") end
			local function get_hd() return get_mychar_child("Head") end
			local function get_hrp1(obj) return get_char_child(obj, "HumanoidRootPart") end
			local function get_hum1(obj) return get_char_child(obj, "Humanoid") end
			local function get_hd1(obj) return get_char_child(obj, "Head") end
			local function get_all() return get_hrp(), get_hum(), get_hd() end
			local function get_all1(obj) return get_hrp1(obj), get_hum1(obj), get_hd1(obj) end
			function get_all12(obj) return get_hrp(), get_hum(), get_hd(), get_hrp1(obj), get_hum1(obj), get_hd1(obj) end
			local function get_grabprt(toy) for _,prt in pairs(toy:GetChildren()) do if (prt:IsA("Part") or prt:IsA("MeshPart")) and prt.CanQuery and prt.CanCollide then return prt end end end
			local function get_po(toy) for _,prt in pairs(toy:GetChildren()) do if prt:FindFirstChild("PartOwner") then return prt.PartOwner end end end
			function get_rank(plr) local rank = 0; if not(check_prem(plr.Name)) then rank = 1 end; if check_admin(plr.UserId) then rank = 2 end; if plr == O.me and L.vhsows then rank = 3 end; return rank end

		--â™¥convsâ™¥
			local function con_LtoS(list) local str = ""; for _,v in pairs(list) do str = str..v end; return str end
			local function con_TtoS(list) local list1 = get_rotate(list); local str = ""; for i,v in pairs(list1) do if i ~= get_endi(list1) then str = str..tostring(v).."." end end; str = str..tostring(get_end(list1)); return str end

		--â™¥eventsâ™¥
			local function invis_touch(a) O.Events.SetNetworkOwnerEvent:FireServer(a,a.CFrame) end
			local function toy_spawn(ToyName,CFrame) O.Events.SpawnToyEvent:InvokeServer(ToyName, CFrame, Vector3.new(0,0,0)) end
			local function toy_spawn1(ToyName) local hd = get_mychar_child("Head") toy_spawn(ToyName, hd.CFrame) end
			local function toy_spawn2(ToyName) local cf = get_mychar_child("HumanoidRootPart").CFrame; toy_spawn(ToyName, cf-Vector3.new(cf.LookVector.X*20, -15, cf.LookVector.Z*20)) end
			local function toy_delete(toy) O.Events.DestroyToyEvent:FireServer(toy) end
			local function toy_explode(BombPHT,PosPart,Pos) local data = {{["Hitbox"] =  BombPHT,["PositionPart"] = PosPart},Pos}; O.Events.BombEvent:FireServer(unpack(data)) end

		--â™¥createsâ™¥
			local function create_blv(parent, name, value) local bv = Instance.new("BoolValue", parent); bv.Value = value; bv.Name = name ; return bv end
			local function create_ov(parent, name, value) local ov = Instance.new("ObjectValue", parent); ov.Value = value; ov.Name = name ; return ov end
			local function create_sv(parent, name, value) local sv = Instance.new("StringValue", parent); sv.Value = value; sv.Name = name ; return sv end
			local function create_bp(parent, name, pos, maxf, d) local bp = Instance.new("BodyPosition", parent)
				bp.Name = name; bp.MaxForce = maxf; bp.D = d; if pos then bp.Position = pos end; return bp end
			local function create_bp1(parent, name, pos) return create_bp(parent, name, pos, N.V.mhv3, 100) end
			local function create_bg(parent, name, maxt, d, cframe) local bg = Instance.new("BodyGyro", parent)
				bg.Name = name; bg.MaxTorque = maxt; bg.D = d; if cframe then bg.CFrame = cframe end return bg end
			local function create_hl(parent, adr, name, ot, ft, oc, fc) local hl = Instance.new("Highlight", parent); hl.Name = name
				hl.OutlineTransparency = ot; hl.FillTransparency = ft; hl.OutlineColor = oc; hl.FillColor = fc; hl.Adornee = adr; return hl end
			local function create_bv(parent, name, vl, maxf) local vel = Instance.new("BodyVelocity", parent);
				vel.Name = name; vel.Velocity = vl; vel.MaxForce = maxf; return vel end

		--â™¥waitsâ™¥
			local function wait_load(parent, name) while not(parent:FindFirstChild(name)) do task.wait() end; return parent[name] end
			local function wait_load1(parent, tree) for i,name in pairs(tree) do tree[i] = wait_load(parent, name); parent = tree[i] end return unpack(tree) end
			local function wait_load2(parent, tree) for _,name in pairs(tree) do parent = wait_load(parent, name) end; return parent end
			local function wait_load11(parent, childs) for i,name in pairs(childs) do childs[i] = wait_load(parent, name) end; return unpack(childs) end
			local function wait_tload(toy, name) if Lt.toys[name] then return wait_load11(toy, Lt.toys[name]) end end
			local function wait_gpload(toy, name) if Lt.gps[name] then return wait_load(toy, Lt.gps[name]) else return get_grabprt(toy) end end


	--â™¥plrsâ™¥
		local function plr_kill1(plr, t)
			local hrp, hum, hd, hrp1, hum1, hd1 = check_plr(plr, t)
			if hrp then
				auto_invis_touch(hd1, hrp)
				invis_touch(hd1)
				for a=1, 100 do
					hrp1.CFrame = hrp1.CFrame + Vector3.new(0, -1000, 0)
					task.wait(0.1)
				end
			end
		end

		local function plr_kill2(plr, t)
			local hrp, hum, hd, hrp1, hum1, hd1 = check_plr(plr, t)
			if hrp then
				auto_invis_touch(hd1, hrp)
				hum1.Health = 0
			end
		end

		local function plr_fling(plr, t)
			local hrp, hum, hd, hrp1, hum1, hd1 = check_plr(plr, t)
			if hrp then
				auto_invis_touch(hd1, hrp)
				if not(hrp1:FindFirstChild("pfbv")) then
					local bv = Instance.new("BodyVelocity", hrp1)
					bv.MaxForce = N.V.mhv3
					bv.Name = "pfbv"
					bv.Velocity = Vector3.new(0, math.huge, 0)
					local con = hd1.PartOwner.AncestryChanged:Connect(function()
						bv:Destroy()
					end)
				end
			end
		end

		local function plr_grab(plr, t)
			local hrp, hum, hd, hrp1, hum1, hd1 = check_plr(plr, t)
			if hrp then auto_invis_touch(hd1, hrp) end
		end

		local function plr_ragdoll(plr, t)
			local hrp, hum, hd, hrp1, hum1, hd1 = check_plr(plr, t)
			if hrp then
				auto_invis_touch(hd1, hrp)
				local save = hrp1.Position
				local bp = create_bp1(hrp1, "rgbp", hrp1.Position + Vector3.new(0, 1000, 0)); task.wait(0.1)
				bp.Position = save + Vector3.new(0, -10, 0); task.wait(0.1)
				bp.Position = save; task.wait(0.1)
				bp:Destroy(); task.wait(0.1)
			end
		end

		local function plr_split(plr, t)
			local hrp, hum, hd, hrp1, hum1, hd1 = check_plr(plr, t)
			if hrp and not(hd1:FindFirstChild("spited")) then
				create_blv(hd1, "spited", true)
				hrp1.Parent.Torso:Destroy()
			end
		end

	--â™¥invis_touchâ™¥
		function auto_invis_touch(prt, hrp, hl, hldata, bp, bg)
			local bv = prt:FindFirstChild("igrab")
			local po = prt:FindFirstChild("PartOwner")
			local sv = prt:FindFirstChild("whograb")
			local con
			if not(sv) then
				sv = create_sv(prt, "whograb", "")
				con = prt.ChildAdded:Connect(function(obj)
					if obj.Name == "PartOwner" then
						sv.Value = obj.Value
					end
				end)
			end
			local function auto()
				set_hl(hl, "FillColor", hldata, 3)
				local save = hrp.CFrame
				local t = false
				local last_pos = prt.Position
				task.spawn(function()
					while (not(po) or po.Value ~= O.myname) and task.wait(0.1) do
						if not(prt.Parent) or not(hrp.Parent) then break end
						if check_hum(hrp.Parent.Humanoid) and last_pos ~= prt.Position then
							last_pos = prt.Position
						end
					end
				end)
				while (not(po) or po.Value ~= O.myname) and task.wait() do
					if not(prt.Parent) or not(hrp.Parent) then break end
					if check_hum(hrp.Parent.Humanoid) then
						if check_mag2(prt, hrp) then
							set_hl(hl, "FillColor", hldata, 4)
							hrp.CFrame = prt.CFrame + ((prt.Position - last_pos)*O.me:GetNetworkPing()*100)
							t = true
							invis_touch(prt)
						else invis_touch(prt) end
					else set_hl(hl, "FillColor", hldata, 5) end
					po = prt:FindFirstChild("PartOwner")
				end
				if t then hrp.CFrame = save end
				set_hl(hl, "FillColor", hldata, 1)
			end
			if sv.Value ~= O.me.Name then auto() end
			if bv then
				set_hl(hl, "FillColor", hldata, 2)
				while not(prt:FindFirstChild("PartOwner")) do task.wait() end
				bp.MaxForce = N.V.nv3
				bg.MaxTorque = N.V.nv3
				while bv.Parent do task.wait() end
				bp.Position = prt.Position
				bg.CFrame = prt.CFrame
				bp.MaxForce = N.V.mhv3
				bg.MaxTorque = N.V.mhv3
				set_hl(hl, "FillColor", hldata, 1)
			end
		end

		local function char_invis_touch(prt, hrp, hl, hldata, bp, bg) auto_invis_touch(wait_load2(get_char, {"Head"}), hrp, hl, hldata, bp, bg) end

		local function safe_invis_touch(prt, hrp, hl, hldata, bp, bg)
			if prt and hrp and prt:IsA("Part") and prt.CollisionGroup == "Items" then
				if check_limbs(prt.Name) then char_invis_touch(prt, hrp, hl, hldata, bp, bg)
				else
					local po = prt:FindFirstChild("PartOwner")
					local save = hrp.CFrame
					local t = false
					local last_pos = prt.Position
					task.spawn(function()
						while t3 and task.wait(0.1) do
							if not(prt.Parent) or not(hrp.Parent) then break end
							if check_hum(hrp.Parent.Humanoid) and last_pos ~= prt.Position then
								last_pos = prt.Position
							end
						end
					end)
					if (not(po) or po.Value ~= O.myname) then
						while (not(po) or po.Value ~= O.myname) and task.wait() do
							if not(prt.Parent) or not(hrp.Parent) then break end
							if check_hum(hrp.Parent.Humanoid) then
								if check_mag2(prt, hrp) then
									hrp.CFrame = prt.CFrame + ((prt.Position - last_pos)*O.me:GetNetworkPing()*100)
									t = true
								else invis_touch(prt) end
							end
							po = get_po(prt.Parent)
						end
						if t then hrp.CFrame = save end
					end
				end
			end
		end
			
		local function loop_invis_touch(prt)
			local v21 = prt:FindFirstChild("ait")
			if not(v21) then
				v21 = Instance.new("ObjectValue", prt)
				v21.Name = "ait"
				local v22 = Instance.new("Highlight", O.hls)
				v22.FillColor = Color3.fromRGB(255, 0, 255)
				v22.OutlineColor = Color3.fromRGB(255, 0, 0)
				v22.FillTransparency = 0.5
				v22.OutlineTransparency = 0
				v22.Adornee = prt
				v22.Name = "aithl"
				v21.Value = v22
				while task.wait() do
					if not(prt.Parent) or not(v21.Parent) or not(v22.Parent) then break end
					local v1 = O.me.Character; if v1 then
						local v2 = v1:FindFirstChild("HumanoidRootPart"); if v2 then
							if check_mag1(v2, prt) then
								invis_touch(prt)
								local save = v22.FillColor
								v22.FillColor = v22.OutlineColor
								v22.OutlineColor = save
								task.wait()
								invis_touch(prt)
								local save = v22.FillColor
								v22.FillColor = v22.OutlineColor
								v22.OutlineColor = save
							end
						end
					end
				end
			end
		end

		local function freeze(prt, hrp)
			local bp = prt:FindFirstChild("fzbp")
			local bg = prt:FindFirstChild("fzbg")
			local hl = prt:FindFirstChild("fzhl")
			if not(bp and bg and hl) then
				local bp = create_bp1(prt, "fzbp", prt.Position)
				local bg = create_bg(prt, "fzbg", N.V.mhv3, 100, prt.CFrame)
				local hl = create_hl(prt, prt.Parent, "fzhl", 0, 0.5, Color3.fromRGB(0, 0, 255), Color3.fromRGB(0, 255, 255))
				while prt.Parent and bp.Parent and bg.Parent and hl.Parent do auto_invis_touch(prt, hrp, hl, N.C2, bp, bg); task.wait() end
			end
		end

	--â™¥spawnsâ™¥
		local function toy_sspawn(name, funcid)
			local hrp, hum = get_all()
			if hrp and hum and check_hum(hum) and not(O.me.InPlot.Value) then
				while not(O.me.CanSpawnToy.Value) do task.wait() end
				if funcid == 1 then task.spawn(toy_spawn1, name) end
				if funcid == 2 then task.spawn(toy_spawn2, name) end
				local toy = wait_load(O.backpack, name.."/n").Value
				O.backpack[name.."/n"]:Destroy()
				return toy
			end
		end

		local function toy_aspawn(name, funcid, hrp)
			local toy = toy_sspawn(name, funcid)
			auto_invis_touch(wait_gpload(toy, name), hrp)
			return toy
		end

		local function toy_void(prt, hrp)
			prt.Parent.Name = prt.Parent.Name.."/v"
			auto_invis_touch(prt ,hrp); if prt.Parent then
				for _,prt in pairs(prt.Parent:GetChildren()) do
					if prt:IsA("Part") or prt:IsA("MeshPart") then
						prt.CanTouch = false
						prt.CanCollide = false
					end
				end
				create_bp1(prt, "vbv", Vector3.new(0, 1111111, 0))
			end
		end

		local function toy_vspawn(name, funcid)
			local toy = toy_sspawn(name, funcid)
			toy_void(wait_gpload(toy, name), get_hrp())
			return toy
		end

	--â™¥setsâ™¥
		function set_hl(hl, choice, data, choice1)
			if hl and choice and data then
				if choice1 then if hl[choice] ~= data[choice1] then hl[choice] = data[choice1] end
				else if hl[choice] ~= data then hl[choice] = data end end
			end
		end

		local function set_ftap_color()
			local Data = {}
			for i,v in pairs(Lt.ftapcolors) do
				Data[i] = PackColor(v)
			end
			writefile("VHS/FTAPColors.vhs",tostring(S.HS:JSONEncode(Data)))

			local plrgui = O.me.PlayerGui
			local tabs = plrgui.MenuGui.Menu.TabBar.Tabs
			local tbcont = plrgui.MenuGui.Menu.TabContents
			local seting = tbcont.Settings
			local shop = tbcont.Shop
			local tbcont_toys = tbcont.Toys
			local tbcont_toysdestroy = tbcont.ToyDestroy
			local tbcont_toyhop = tbcont.ToyShop

			plrgui.MenuGui.TopRight.CoinsFrame.BackgroundColor3 = Lt.ftapcolors.Coins
			plrgui.MenuGui.Menu.TabBar.BackgroundColor3 = Lt.ftapcolors.TabBar
			tabs.Settings.BackgroundColor3 = Lt.ftapcolors.Settings
			tabs.Shop.BackgroundColor3 = Lt.ftapcolors.Shop
			tabs.ToyDestroy.BackgroundColor3 = Lt.ftapcolors.ToyDestroy
			tabs.ToyShop.BackgroundColor3 = Lt.ftapcolors.ToysShop
			tabs.Toys.BackgroundColor3 = Lt.ftapcolors.Toys
			seting.Contents.BackgroundColor3 = Lt.ftapcolors.SettingsContents
			seting.Title.BackgroundColor3 = Lt.ftapcolors.SettingsTitle
			shop.Title.BackgroundColor3 = Lt.ftapcolors.ShopTitle
			shop.Contents.BackgroundColor3 = Lt.ftapcolors.ShopContents
			tbcont_toys.Contents.BackgroundColor3 = Lt.ftapcolors.ToysContents
			tbcont_toys.FavoritesFrame.BackgroundColor3 = Lt.ftapcolors.FavoritesFrame
			tbcont_toys.FavoritesFrame.Favorites.BackgroundColor3 = Lt.ftapcolors.Favorites
			tbcont_toys.MeterFrame.BackgroundColor3 = Lt.ftapcolors.MeterFrame
			tbcont_toys.SortingTabs.BackgroundColor3 = Lt.ftapcolors.SortingTabs
			tbcont_toys.Title.BackgroundColor3 = Lt.ftapcolors.ToysTitle
			tbcont_toysdestroy.Title.BackgroundColor3 = Lt.ftapcolors.DestroyTitle
			tbcont_toysdestroy.Contents.BackgroundColor3 = Lt.ftapcolors.DestroyContents
			tbcont_toysdestroy.MeterFrame.BackgroundColor3 = Lt.ftapcolors.DestroyMeterFrame
			tbcont_toyhop.Title.BackgroundColor3 = Lt.ftapcolors.ToyShopTitle
			tbcont_toyhop.SortingTabs.BackgroundColor3 = Lt.ftapcolors.ToyShopSortingTabs
			tbcont_toyhop.Contents.BackgroundColor3 = Lt.ftapcolors.ToyShopContents
		end

		local function set_chams_parametr()
			for _,plr in ipairs(S.Players:GetPlayers()) do
				local v1 = plr.Character; if v1 then
					local hl = v1:FindFirstChild("cham")
					if not(hl) then hl = Instance.new("Highlight", v1) end
					hl.Name = plr.Name
					hl.Adornee = v1
					hl.Enabled = chamst
					hl.FillColor = chamsfc
					hl.FillTransparency = N.chamsft
					hl.OutlineColor = chamsoc
					hl.OutlineTransparency = N.chamsot
				end
			end
		end

		local function set_line_color()
			local Data = {}
			for i,v in ipairs(Lt.ccolors) do
				Data[i] = PackColor(v)
			end

			writefile("VHS/LineColor.vhs",tostring(S.HS:JSONEncode(Data)))

			local args = {
				ColorSequenceKeypoint.new(0, Lt.ccolors[1]),
				ColorSequenceKeypoint.new(0.10, Lt.ccolors[2]),
				ColorSequenceKeypoint.new(0.15, Lt.ccolors[3]),
				ColorSequenceKeypoint.new(0.20, Lt.ccolors[4]),
				ColorSequenceKeypoint.new(0.25, Lt.ccolors[5]),
				ColorSequenceKeypoint.new(0.30, Lt.ccolors[6]),
				ColorSequenceKeypoint.new(0.35, Lt.ccolors[7]),
				ColorSequenceKeypoint.new(0.40, Lt.ccolors[8]),
				ColorSequenceKeypoint.new(0.45, Lt.ccolors[9]),
				ColorSequenceKeypoint.new(0.50, Lt.ccolors[10]),
				ColorSequenceKeypoint.new(0.55, Lt.ccolors[11]),
				ColorSequenceKeypoint.new(0.60, Lt.ccolors[12]),
				ColorSequenceKeypoint.new(0.65, Lt.ccolors[13]),
				ColorSequenceKeypoint.new(0.70, Lt.ccolors[14]),
				ColorSequenceKeypoint.new(0.75, Lt.ccolors[15]),
				ColorSequenceKeypoint.new(0.80, Lt.ccolors[16]),
				ColorSequenceKeypoint.new(0.85, Lt.ccolors[17]),
				ColorSequenceKeypoint.new(0.90, Lt.ccolors[18]),
				ColorSequenceKeypoint.new(0.95, Lt.ccolors[19]),
				ColorSequenceKeypoint.new(1, Lt.ccolors[20])
			}
			O.Events.SetLineColorEvent:FireServer(ColorSequence.new(args))
		end

		
		local function update_hui()
			Lt.hui = {}
			Lt.hui2 = {}
			local p = "p"
			if L.vhsows then p = "" end
			for _,plr in ipairs(S.Players:GetPlayers()) do
				if plr ~= O.me then
					if not(check_prem(plr.Name)) then
						if plr:IsFriendsWith(O.me.userId) then
							table.insert(Lt.hui, plr.DisplayName.." ("..plr.Name..") â™¦Friendâ™¦ â™¥Premium Userâ™¥")
							Lt.hui2[plr.Name..p] = plr.DisplayName.." ("..plr.Name..") â™¦Friendâ™¦ â™¥Premium Userâ™¥" 
						else
							table.insert(Lt.hui, plr.DisplayName.." ("..plr.Name..") â™¥Premium Userâ™¥")
							Lt.hui2[plr.Name..p] = plr.DisplayName.." ("..plr.Name..") â™¥Premium Userâ™¥" 
						end
					else
						if plr:IsFriendsWith(O.me.userId) then
							table.insert(Lt.hui, plr.DisplayName.." ("..plr.Name..") â™¦Friendâ™¦")
							Lt.hui2[plr.Name] = plr.DisplayName.." ("..plr.Name..") â™¦Friendâ™¦"
						else
							table.insert(Lt.hui, plr.DisplayName.." ("..plr.Name..")")
							Lt.hui2[plr.Name] = plr.DisplayName.." ("..plr.Name..")"
						end
					end
				end
			end
		end; update_hui()

		local function blob_kick(blob,hrp,rl,v)
			local script = blob:FindFirstChild("BlobmanSeatAndOwnerScript"); if script then
				local detec = blob:FindFirstChild(rl.."Detector")
				local grab = script:FindFirstChild("CreatureGrab")
				local drop = script:FindFirstChild("CreatureDrop")
				if detec and grab and drop then
					if v == 1 then
						grab:FireServer(detec,hrp,detec[rl.."Weld"])
					elseif v == 2 then
						drop:FireServer(detec[rl.."Weld"],hrp)
					elseif v == 12 then
						grab:FireServer(detec,hrp,detec[rl.."Weld"])
						drop:FireServer(detec[rl.."Weld"],hrp)
					end
				end
			end
		end

		local function anch_plr()
			O.me.Character.HumanoidRootPart.Anchored = true
			while O.me.Character["Right Arm"].RagdollLimbPart.CanCollide == true do task.wait() end
			O.me.Character.HumanoidRootPart.Anchored = false
		end

		local function reset_gq()
			for _,obj in pairs(S.w:GetDescendants()) do 
				if obj:IsA("Part") and obj:FindFirstChild("gqcs") then
					obj.CastShadow = obj.gqcs.Value
					obj.gqcs:Destroy()
				end
			end
			for _,obj in pairs(S.w:GetDescendants()) do 
				if obj:IsA("Part") and obj:FindFirstChild("gqs") then
					obj.Shadows = obj.gqs.Value
					obj.gqs:Destroy()
				end
			end
			game.MaterialService.Use2022Materials = false
			game.Lighting.Technology = "Voxel"
			game.Lighting.Ambient = Color3.fromRGB(120, 120, 120)
			game.Lighting.OutdoorAmbient = Color3.fromRGB(200, 200, 200)
			O.sunrays.Intensity = 0
			O.sunrays.Spread = 0
			O.bloomeffect.Intensity = 0
			O.bloomeffect.Size = 0
			O.bloomeffect.Threshold = 0
		end


--â™¥forsâ™¥
	for _,plr in ipairs(S.Players:GetPlayers()) do
		if plr ~= O.me then
			if plr.Character then plr.Character.Parent = O.chars end
			if S.w:FindFirstChild(plr.Name.."SpawnedInToys") and plr ~= O.me then
				create_sv(S.w[plr.Name.."SpawnedInToys"], "plr_name", plr.Name)
				S.w[plr.Name.."SpawnedInToys"].Parent = O.backpacks
			end
			plr.CharacterAdded:Connect(function(char)
				char.Parent = O.chars
				set_chams_parametr()
			end)
			-- if plr ~= O.me and plr.InPlot.Value and check_prem(plr.Name) then
			-- 	task.wait()
			-- 	S.w.PlotItems.PlayersInPlots[plr].Parent = S.w
			-- end
		end
	end

	for _,obj in pairs(S.w:GetChildren()) do
		if obj.Name == "PlayerCharacterLocationDetector" then obj.Parent = O.pcld
		else local check = {"Balloons","Cave","Cubes","Drawers",
				"Farm","Food","Furniture","Glass Boxes","Ladders",
				"Large Animals","Lincoln Planks","Music","NOT New",
				"Other","Pallets","Robloxians","Rollers",_G.f2}
			if check_list(check, obj.Name) then obj.Parent = O.stoys end
		end
	end

	for _,prt in pairs(S.w.Plots:GetDescendants()) do if prt.Name == "PlotBarrier" or prt.Name == "PlotArea" then prt.CanQuery = false; prt.CanCollide = false end end



--â™¥connectâ™¥
	S.Players.PlayerAdded:Connect(function(plr)
		plr.CharacterAdded:Connect(function(char)
			if char ~= O.me.Character then
				char.Parent = O.chars
				-- set_chams_parametr()
			end
		end)
		if paitd then post_info(plr) end
		if check_spy(plr.Name) then notify(plr.Name.." ("..plr.DisplayName..") Joined your server") end
		update_hui()
		while not(S.w:FindFirstChild(plr.Name.."SpawnedInToys")) do task.wait() end
		create_sv(S.w[plr.Name.."SpawnedInToys"], "plr_name", plr.Name)
		S.w[plr.Name.."SpawnedInToys"].Parent = O.backpacks
	end)

	S.Players.PlayerRemoving:Connect(function()
		update_hui()
	end)

	O.backpack.ChildAdded:Connect(function(toy)
		if not(toy:IsA("ObjectValue")) then
			local ov = create_ov(toy.Parent, toy.Name.."/n", toy)
			toy.Destroying:Connect(function() ov:Destroy() end)
			if toyaura and sttta and toy.Name ~= "FireExtinguisher" and toy.Name ~= "NinjaKunai" then
				N.cat = N.cat + 1
				table.insert(Lt.lat,toy)
			end
			P.last_toy = toy
		end
	end)

	S.w.ChildAdded:Connect(function(gp)
		if gp.Name == "GrabParts" then
			local wc = wait_load2(gp, {"GrabPart","WeldConstraint"})
			local prt = wc.Part1
			local bv = create_blv(prt, "igrab", true)
			gp.Destroying:Connect(function() bv:Destroy() end)
		end
	end)

    
	S.w.ChildAdded:Connect(function(pcld)
		if pcld.Name == "PlayerCharacterLocationDetector" then
			task.wait(); pcld.Parent = O.pcld
		end
	end)

	S.UIS.JumpRequest:Connect(function()
		local t = true
		if O.me.Character and t and infj then
			t = false
			O.me.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			task.wait()
			t = true
		end
	end)

	S.w.ChildAdded:Connect(function(f)
		if f.Name == "GrabParts" and not(kickkk1) and not(kickkk2) then
			N.zgv = 0
			local da = f.DragPart.DragAttach
			while f.Parent and task.wait() do da.Position = S.w.Camera.CFrame.LookVector * N.zgv end
		end
	end)

	S.w.ChildAdded:Connect(function(model)
		if model.Name == "GrabParts" and sila then
			local part_to_impulse = model["GrabPart"]["WeldConstraint"].Part1
			if part_to_impulse then
				local velocityObj = Instance.new("BodyVelocity", part_to_impulse)
				model:GetPropertyChangedSignal("Parent"):Connect(function()
					if not model.Parent then
						if S.UIS:GetLastInputType() == Enum.UserInputType.MouseButton2 then
							velocityObj.MaxForce = N.V.mhv3
							velocityObj.Velocity = S.w.CurrentCamera.CFrame.lookVector * N.strength
							S.d:AddItem(velocityObj, 1)
						elseif S.UIS:GetLastInputType() == Enum.UserInputType.MouseButton1 then
							velocityObj:Destroy()
						else
							velocityObj:Destroy()
						end
					end
				end)
			end
		end
	end)



	S.w.ChildAdded:Connect(function(model)--neon
		if model.Name == "GrabParts" and ultragrabbb then
			S.w.GrabParts.DragPart.Color = Color3.fromRGB(255,0,0)
			S.w.GrabParts.DragPart.Transparency = 0
			S.w.GrabParts.DragPart.Material = "Neon"
			model.DragPart.AlignOrientation.Responsiveness = 200
			model.DragPart.AlignOrientation.MaxTorque = "inf"
			model.DragPart.AlignPosition.MaxAxesForce = Vector3.new("inf","inf","inf")
			model.DragPart.AlignPosition.MaxForce = "inf"
			model.DragPart.AlignPosition.Responsiveness = 200
		end
	end)

	S.w.ChildAdded:Connect(function(model)
		if model.Name == "Part" and O.me.Character and antiexpl then
			local mag = (model.Position - O.me.Character.HumanoidRootPart.Position).Magnitude
			if mag <= 18 then
				anch_plr()
			end
		end
	end)

	S.w.DescendantAdded:Connect(function(toy)
		if toy.Name == "CreatureBlobman" and toy.Parent ~= O.backpack and antiblob then
			task.wait()
			wait_load2(toy, {"LeftDetector","AttachPlayer"}):Destroy()
			wait_load2(toy, {"RightDetector","AttachPlayer"}):Destroy()
		end
	end)

	S.w.PlotItems.Plot1.ChildAdded:Connect(function(toy)
		if toy.Name == "PlantPottedCactus" then
			task.wait()
			toy:Destroy()
		end
	end)

	S.w.PlotItems.Plot2.ChildAdded:Connect(function(toy)
		if toy.Name == "PlantPottedCactus" then
			task.wait()
			toy:Destroy()
		end
	end)

	S.w.PlotItems.Plot3.ChildAdded:Connect(function(toy)
		if toy.Name == "PlantPottedCactus" then
			task.wait()
			toy:Destroy()
		end
	end)

	S.w.PlotItems.Plot4.ChildAdded:Connect(function(toy)
		if toy.Name == "PlantPottedCactus" then
			task.wait()
			toy:Destroy()
		end
	end)

	S.w.PlotItems.Plot5.ChildAdded:Connect(function(toy)
		if toy.Name == "PlantPottedCactus" then
			task.wait()
			toy:Destroy()
		end
	end)

	S.w.PlotItems.PlayersInPlots.ChildAdded:Connect(function(plr)--anti dom
		if plr ~= O.me and check_prem(plr.Name) then
			task.wait()
			plr.Parent = O.chars
		end
	end)

	O.me.CharacterAdded:Connect(function()
		typingAnimation = Instance.new("Animation")
		typingAnimation.AnimationId = "rbxassetid://18353618958"
		typingAnimator = O.me.Character:WaitForChild("Humanoid"):WaitForChild("Animator")
		typingTrack = typingAnimator:LoadAnimation(typingAnimation)

		crouchAnimation = Instance.new("Animation")
		crouchAnimation.AnimationId = "rbxassetid://6980229055"
		crouchAnimator = O.me.Character:WaitForChild("Humanoid"):WaitForChild("Animator")
		crouchTrack = crouchAnimator:LoadAnimation(crouchAnimation)

		throwedAnimation = Instance.new("Animation")
		throwedAnimation.AnimationId = "rbxassetid://7047322890"
		throwedAnimator = O.me.Character:WaitForChild("Humanoid"):WaitForChild("Animator")
		throwedTrack = throwedAnimator:LoadAnimation(throwedAnimation)
	end)

	S.UIS.InputChanged:Connect(function(inp)
		if inp.UserInputType == Enum.UserInputType.MouseWheel and zgt then
			local v1 = S.w:FindFirstChild("GrabParts"); if v1 then
				if inp.Position.Z == 1 then N.zgv = N.zgv + 3 else N.zgv = N.zgv - 3 end
			else N.zgv = 0 end
		end
	end)

	S.Players.PlayerAdded:Connect(function(p)
		p.Chatted:Connect(function(msg)
			chat_msg(p,msg)
		end)
	end)
